@import url(https://fonts.googleapis.com/css?family=Roboto:400,500,700);[dir=rtl] .flatpickr-calendar {
  width: 307.875px;
}

[dir=rtl] .dayContainer {
  padding: 0;
  border-left: 0;
}

[dir=rtl] span.flatpickr-day, [dir=rtl] span.flatpickr-day.prevMonthDay, [dir=rtl] span.flatpickr-day.nextMonthDay {
  border-radius: 0 !important;
  border: 1px solid #e9e9e9;
  max-width: none;
  border-left-color: transparent;
}
[dir=rtl] span.flatpickr-day:nth-child(n+8), [dir=rtl] span.flatpickr-day.prevMonthDay:nth-child(n+8), [dir=rtl] span.flatpickr-day.nextMonthDay:nth-child(n+8) {
  border-top-color: transparent;
}
[dir=rtl] span.flatpickr-day:nth-child(7n-6), [dir=rtl] span.flatpickr-day.prevMonthDay:nth-child(7n-6), [dir=rtl] span.flatpickr-day.nextMonthDay:nth-child(7n-6) {
  border-right: 0;
}
[dir=rtl] span.flatpickr-day:nth-child(n+36), [dir=rtl] span.flatpickr-day.prevMonthDay:nth-child(n+36), [dir=rtl] span.flatpickr-day.nextMonthDay:nth-child(n+36) {
  border-bottom: 0;
}
[dir=rtl] span.flatpickr-day:nth-child(-n+7), [dir=rtl] span.flatpickr-day.prevMonthDay:nth-child(-n+7), [dir=rtl] span.flatpickr-day.nextMonthDay:nth-child(-n+7) {
  margin-top: 0;
}
[dir=rtl] span.flatpickr-day.today:not(.selected), [dir=rtl] span.flatpickr-day.prevMonthDay.today:not(.selected), [dir=rtl] span.flatpickr-day.nextMonthDay.today:not(.selected) {
  border-color: #e9e9e9;
  border-left-color: transparent;
  border-top-color: transparent;
  border-bottom-color: #F64747;
}
[dir=rtl] span.flatpickr-day.today:not(.selected):hover, [dir=rtl] span.flatpickr-day.prevMonthDay.today:not(.selected):hover, [dir=rtl] span.flatpickr-day.nextMonthDay.today:not(.selected):hover {
  border: 1px solid #F64747;
}
[dir=rtl] span.flatpickr-day.startRange, [dir=rtl] span.flatpickr-day.endRange, [dir=rtl] span.flatpickr-day.prevMonthDay.startRange, [dir=rtl] span.flatpickr-day.prevMonthDay.endRange, [dir=rtl] span.flatpickr-day.nextMonthDay.startRange, [dir=rtl] span.flatpickr-day.nextMonthDay.endRange {
  border-color: #4f99ff;
}
[dir=rtl] span.flatpickr-day.today, [dir=rtl] span.flatpickr-day.selected, [dir=rtl] span.flatpickr-day.prevMonthDay.today, [dir=rtl] span.flatpickr-day.prevMonthDay.selected, [dir=rtl] span.flatpickr-day.nextMonthDay.today, [dir=rtl] span.flatpickr-day.nextMonthDay.selected {
  z-index: 2;
}

[dir=rtl] .rangeMode .flatpickr-day {
  margin-top: -1px;
}

[dir=rtl] .flatpickr-weekwrapper .flatpickr-weeks {
  box-shadow: none;
}

[dir=rtl] .flatpickr-weekwrapper span.flatpickr-day {
  border: 0;
  margin: -1px -1px 0 0;
}

[dir=rtl] .hasWeeks .flatpickr-days {
  border-left: 0;
}
/*# sourceMappingURL=data:application/json;base64, */